class AUTH_QUERIES:
    CREATE_TABLE = "CREATE TABLE IF NOT EXISTS accounts (id INTEGER PRIMARY KEY AUTOINCREMENT, account_id CHAR(50) NOT NULL, username TEXT NOT NULL, access_token TEXT, timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP);"
    ADD_ACCOUNT = "INSERT INTO accounts (account_id, username) VALUES (:account_id, :username);"
    CHECK_USER_EXISTS = "select EXISTS(select account_id from accounts WHERE username = :name);"
    CHECK_ACCOUNT_EXISTS = "select EXISTS(select account_id from accounts WHERE account_id = :account_id);"
    UPDATE_ACCESS_TOKEN = "UPDATE accounts SET access_token = :access_token WHERE account_id = :account_id;"
    CHECK_ACCESS_TOKEN_EXISTS = "select EXISTS(select access_token from accounts WHERE access_token = :access_token);"


class VULNERABILITIES_RETRIEVAL_QUERIES:
    GET_VULNERABIITIES = """SELECT "index", cve_id, mod_date as "modification_date", pub_date as "publication_date", cvss as "cvss_score", cwe_code, cwe_name, summary from cves LIMIT :limit offset :offset;"""
    FILTER_VULNERABILITIES = """SELECT "index", cve_id, mod_date as "modification_date", pub_date as "publication_date", cvss as "cvss_score", cwe_code, cwe_name, summary from cves where cve_id LIKE '%{0}%' LIMIT :limit;"""
    GET_AFFECTED_DEVICES_FOR_CVE_ID = """SELECT DISTINCT("vulnerable_product") FROM products WHERE "cve_id" = :cve_id LIMIT :limit;"""
